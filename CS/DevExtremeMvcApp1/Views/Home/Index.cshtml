@using DevExtremeMvcApp1.Models

@(Html.DevExtreme().Gantt<Task>()
    .ID("gantt")
    .RootValue("-1")
    .Tasks(t => t
        .DataSource(d => d.WebApi().Controller("SampleData").Key("Key").LoadAction("GetTasks"))
        .KeyExpr("Key")
        .TitleExpr("Title")
        .ParentIdExpr("ParentKey")
        .StartExpr("StartDate")
        .EndExpr("EndDate")
        .ProgressExpr("Progress")
    )
    .Dependencies(dep => dep
        .DataSource(d => d.WebApi().Controller("SampleData").Key("Key").LoadAction("GetDependencies"))
        .KeyExpr("Key")
        .PredecessorIdExpr("PredecessorKey")
        .SuccessorIdExpr("SuccessorKey")
    )
    .Resources(r => r
        .DataSource(d => d.WebApi().Controller("SampleData").Key("Key").LoadAction("GetResources"))
        .KeyExpr("Key")
        .TextExpr("Name")
    )
    .ResourceAssignments(ra => ra
        .DataSource(d => d.WebApi().Controller("SampleData").Key("Key").LoadAction("GetResourceAssignments"))
        .KeyExpr("Key")
        .TaskIdExpr("TaskKey")
        .ResourceIdExpr("ResourceKey")
    )
    .Columns(columns => {
        columns.AddFor(m => m.Title)
            .Caption("Title")
            .Width(150);
        columns.AddFor(m => m.StartDate)
            .Visible(false);
        columns.AddFor(m => m.ActualStartDate)
            .Visible(false);
        columns.AddFor(m => m.EndDate)
            .Visible(false);
        columns.AddFor(m => m.ActualEndDate)
            .Visible(false);
        columns.AddFor(m => m.Progress)
            .Visible(false);
    })
    .Toolbar(t => {
        t.Items(i => {
            i.Add().Name(GanttToolbarItem.Undo);
            i.Add().Name(GanttToolbarItem.Redo);
            i.Add().Name(GanttToolbarItem.Separator);
            i.Add().Name(GanttToolbarItem.CollapseAll);
            i.Add().Name(GanttToolbarItem.ExpandAll);
            i.Add().Name(GanttToolbarItem.Separator);
            i.Add().Name(GanttToolbarItem.ZoomIn);
            i.Add().Name(GanttToolbarItem.ZoomOut);
        });
    })
    .TaskContentTemplate(new JS("getTaskContentTemplate"))
    .ScaleType(GanttScaleType.Days)
    .TaskListWidth(400)

)

<script>
    function getTaskContentTemplate(item) {
        var $parentContainer = $(document.createElement("div"));

        appendPlannedTask(item.taskData, item.taskResources[0], item.taskSize.width, $parentContainer);
        appendActualTask(item.taskData, item.taskSize.width, $parentContainer);
        
        return $parentContainer;
    }

    function appendPlannedTask(taskData, resource, taskWidth, container) {
        var $plannedTaskContainer = $(document.createElement("div"))
            .addClass("planned-task")
            .attr("style", "width:" + taskWidth + "px;")
            .appendTo(container);

        var $wrapper = $(document.createElement("div"))
            .addClass("planned-task-wrapper")
            .appendTo($plannedTaskContainer);

        $(document.createElement("div"))
            .addClass("planned-task-title")
            .text(taskData.Title)
            .appendTo($wrapper);
        $(document.createElement("div"))
            .addClass("planned-task-resource")
            .text(resource? resource.text : "")
            .appendTo($wrapper);

        $(document.createElement("div"))
            .addClass("planned-task-progress")
            .attr("style", "width:" + (parseFloat(taskData.Progress)) + "%;")
            .appendTo($plannedTaskContainer);
    }
    function appendActualTask(taskData, taskWidth, container) {
        var taskRange = taskData.EndDate - taskData.StartDate;
        var tickSize = taskWidth / taskRange;
        var actualTaskOffset = new Date(taskData.ActualStartDate) - taskData.StartDate;
        var actualTaskRange = new Date(taskData.ActualEndDate) - new Date(taskData.ActualStartDate);

        var actualTaskWidth = Math.round(actualTaskRange * tickSize) + "px";
        var actualTaskLeftPosition = Math.round(actualTaskOffset * tickSize) + "px";

       $(document.createElement("div"))
            .addClass("actual-task")
            .attr("style", "width:" + actualTaskWidth + "; left:" + actualTaskLeftPosition)
            .appendTo(container);
    }

</script>